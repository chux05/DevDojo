@page "/new-profile"
@inject HttpClient http

<style>
    body {
        background-color: #19a2ae;
    }
    .background{
        overflow: hidden;
        width: 100%;
        
    }
    .profile-picture{
        border-radius: 50%;
        border: 5px solid white;
        overflow: hidden;
        height: 15vh;
        width: 15vh;
        display: flex;
        align-items: center;
        justify-content: center;
        
        
        position:relative;
        top: -15vh;
        transform: translateY(50%);
    }
    img{
        object-fit: fill;
    }
    .c-body{
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;
        
       
    }
    .pp{
        
    }
    .full-name, .age, .location{
        font-size: 3vh;
        font-weight: 700;
    }
    .age{
        color: grey;
    }
    .card, .card-body{
        border-radius: 10px;
        overflow: hidden;
    }
    .location{
        width: 100%;
        text-align: center;
        color: grey;
        border-bottom: grey 1px solid;
    }
    .card-title, .location, hr, .likes-section{
        position:relative;
                top: -5vh;
               
    }
    .likes-section{
        display: grid;
        grid-template-columns: 10vh 10vh 10vh;
        grid-gap: 5px;
    }
    .like-head{
        display: flex;
                justify-content: center;
                flex-direction: column;
                align-items: center;
    }
    
</style>

<h3>My Profile</h3>

@if (root != null)
{
<div class="row justify-content-center">

    @foreach (var item in results)
    {
    
        <div class="card justify-content-center mr-4 mb-3">
            <div class="card-body c-body p-0">
                <div class="background">
                    <img alt="background" src="/assets/bg-pattern-card.svg">
                </div>
                <div class="profile-picture -success">
                    <img alt="profile picture" class="pp" src="@item.picture.large"/>
                </div>
                <h5 class="card-title justify-content-center">
                    <span class="full-name">@($"{item.name.first} {item.name.last}")</span>
                    <span class="age">@item.dob.age</span>
                </h5>
                <p class="location">@item.location.city</p>
                <hr/>
                <div class="likes-section">
                    <span class="like-head"><span style="font-size: 3vh; font-weight: 700;">5k</span> <span>Followers</span></span>
                    <span class="like-head"><span style="font-size: 3vh; font-weight: 700;">5k</span> <span>Likes</span></span>
                    <span class="like-head"><span style="font-size: 3vh; font-weight: 700;">9k</span> <span>Photos</span></span>
                </div>
            </div>
        </div>
    }

</div>
}

@code {
    RootModel root = new RootModel();
    List<Result> results = new List<Result>();
    protected override async Task OnInitializedAsync()
    {
        root = await http.GetFromJsonAsync<RootModel>("https://randomuser.me/api/");
        results = root.results; //returns results as a single person even though it is a list
    }
}
