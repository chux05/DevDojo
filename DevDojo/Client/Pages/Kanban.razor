@page "/kanban"
@using DevDojo.Shared
@inject HttpClient http
<style>

    .wrapper {
        width: 100%;
        height: 100vh;
        background: #d7d7d7;
        display: flex;
    }

    .categories {
        width: 100%;
        height: 80%;
        display: flex;
        justify-content: space-evenly;
        align-items: center;
    }

    .cards {
        width: 20%;
        height: 500px;
        background: #ffffff;
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
        overflow: auto;
        border-radius: 10px;
    }

    .items {
        height: 10%;
        min-height: 50px;
        width: 90%;
        border: solid 1px;
        border-radius: 10px;
        margin-bottom: 15px;
        display: flex;
        justify-content: center
    }

    .cardHead {
        height: 20%;
        width: 90%;
        text-align: center;
        font-size: 2em;
        margin-bottom: 20px;
    }
</style>

<h3>Kanban</h3>
@if (Items != null)
{


    <div class="wrapper">

        <div class="categories">

            <div class="cards">
                <div class="cardHead">
                    Backlog
                </div>
                @foreach (var item in Items.Where(a => a.Status.Contains("Backlog")))
                {
                    <div class="items">
                        @item.Name
                    </div>
                }
            </div>


            <div class="cards">
                <div class="cardHead">
                    To do
                </div>
                @foreach (var item in Items.Where(a => a.Status.Contains("Todo")))
                {
                    <div class="items">
                        @item.Name
                    </div>
                }
            </div>

            <div class="cards">
                <div class="cardHead">
                    Doing
                </div>
                @foreach (var item in Items.Where(a => a.Status.Contains("Doing")))
                {
                    <div class="items">
                        @item.Name
                    </div>
                }
            </div>

            <div class="cards">
                <div class="cardHead">
                    Done
                </div>
                @foreach (var item in Items.Where(a => a.Status.Contains("Done")))
                {
                    <div class="items">
                        @item.Name
                    </div>
                }
            </div>

        </div>

    </div>
}

@code {

    private List<TaskItem> Items;

    protected override async Task OnInitializedAsync()
    {
        Items = await http.GetFromJsonAsync<List<TaskItem>>("api/Item");
    }
}
